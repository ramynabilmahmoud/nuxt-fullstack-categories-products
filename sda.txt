<!-- <template>
  <ul>
    <li v-for="category in tree" :key="category.id">
      <div class="category-item">
        <span @click="toggleChildren(category)" class="toggle-arrow">
          {{ isOpen(category) ? "▼" : "►" }}
        </span>
        <img
          v-if="category.picture"
          :src="category.picture"
          alt="Category Image"
          class="img-thumbnail me-4"
          style="width: 100px; height: 100px; object-fit: cover"
        />
        <div class="ml-4 category-details">
          <h5>{{ category.name }}</h5>
          <p>ID: {{ category.id }}</p>
          <p>Parent ID: {{ category.parent_id }}</p>
          <p v-if="isTopLevel">
            Total Product count: {{ category.productCount }}
          </p>
          <button
            class="btn btn-warning btn-sm mt-2"
            @click="editCategory(category)"
          >
            Edit
          </button>
        </div>
      </div>
      <ul
        v-if="
          isOpen(category) &&
          Array.isArray(category.children) &&
          category.children.length
        "
        class="children-list"
      >
        <CategoryTree :tree="category.children" :isTopLevel="false" />
      </ul>
    </li>
  </ul>
</template>

<script setup>
import { ref } from "vue";

const updateCategoryId = ref(null);
const updateCategoryData = ref({
  name: "",
  picture: "",
  parent_id: null,
});

const props = defineProps({
  tree: {
    type: Array,
    required: true,
  },
  isTopLevel: {
    type: Boolean,
    default: true,
  },
});

const emit = defineEmits(["editCategory"]);

const openCategories = ref(new Set());

const toggleChildren = (category) => {
  if (openCategories.value.has(category.id)) {
    openCategories.value.delete(category.id);
  } else {
    openCategories.value.add(category.id);
  }
};

const isOpen = (category) => {
  return openCategories.value.has(category.id);
};

const editCategory = (category) => {
  updateCategoryId.value = category.id;
  updateCategoryData.value = {
    name: category.name,
    picture: category.picture,
    parent_id: category.parent_id,
  };
  // Scroll to the update form
  const updateForm = document.getElementById("updateForm");
  if (updateForm) {
    updateForm.scrollIntoView({ behavior: "smooth" });
  }
};
</script>

<style scoped>
/* Keep existing styles */
.category-item {
  display: flex;
  align-items: center;
  margin-bottom: 1rem;
}

.toggle-arrow {
  cursor: pointer;
  margin-right: 10px;
}

.category-details {
  display: flex;
  flex-direction: column;
}

.children-list {
  padding-left: 20px; /* Indent children */
  border-left: 1px solid #ddd; /* Optional: add a line to indicate nesting */
  margin-top: 10px; /* Space between parent and children */
}
</style> -->
